" MAKE SURE YOU :SO %
" entry = priority | datestamp | keywords | hyphen | Subject Context
" general sort is by priority but you can sort by date and priority with :50,$!sort -k2r -k1
" another idea is /---- then .,$sort  MARK 50 and goto ot with 'm
nmap ,, :50,$sort<cr>
nmap ,p :. s/^/0 /g<cr>
" always add down then SORT and highlight with /date
" sort by datestamp ,sd where the date stamp event is :r !date +'\%FT\%T\%z \%a' -d "
nmap ,d :50,$!sort -r -k1r<cr>
nmap ,t :r !date +'\%FT\%T\%z \%a' -d "
nmap ,f :Rg <C-R><C-W><cr>
" nmap ,g :lgrep <C-R><C-W> ./*<CR>:lopen<CR>
nmap ,g :lgrep -r <C-R><C-W> ./*<CR>:lopen<CR>
" sort by keyword1 ,sk1
nmap ,k :50,$!sort -k3<cr>
nmap ,v :vs\|E<cr>
" datestamp from .vimrc or here
nnoremap dts "=strftime("%FT%T%z %a")<CR>P
inoremap dts <C-R>=strftime("%FT%T%z %a")<CR>

"2021-06-28T09:52:31-0700 Mon add filename tag 
inoremap Wt <C-R>=expand("%:r")<CR>

" create a new item by keywords

inoremap ,v 0 <C-R>=strftime("%FT%T%z %a")<CR> vim  
inoremap ,m 0 <C-R>=strftime("%FT%T%z %a")<CR> meisterzeit 

" Organize lines or rearrange to aid thinking with g/2021-07-2[^7]/m$
" Right now, It's like this - use * to link text
" :lvim 'pattern' % and :lopen to link all hits together
" :lvim 'c-r/' % will search for the current word
":RG pattern
" r reference x done 0-9 priority n note search with /^[0-9rntx]
" This line keeps the rest of the file from being treated as vimscript
finish
" GIT BACK UP in :term $git commit -ma and $git status -uno # to show untracked files
" 2021-07-27T11:16:49-0700 Tue BackupScript git log - :term then git commit -a -m "commit message"
" based on https://github.com/nrr-deprecated/todo RandyPausch
-----------------------------------------------------------------------------
" use :Calendar via calendar.vim and pass DailyEntries to meisterzeit
" :W3m for input or :term and QuteBrowser
" :g/pattern/m$ for quicker grep
